{
  "hash": "98a10cdae085b6aa19b1d41a27a4b2ed",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands On Exercise 1\"\nsubtitle: \"A Layered Grammar of Graphics: Methods in ggplot2\"\nformat: html\ndate: 04/18/2025\ndate-format: long\ndate-modified: last-modified\neditor: visual\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# Getting Started\n\n## Installing R Packages\n\nThe code below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse)\n```\n:::\n\n\n\n## Importing Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"data/Exam_data.csv\")\nshow_col_types = FALSE\n\nknitr::kable(head(exam_data))\n```\n\n::: {.cell-output-display}\n\n\n|ID         |CLASS |GENDER |RACE    | ENGLISH| MATHS| SCIENCE|\n|:----------|:-----|:------|:-------|-------:|-----:|-------:|\n|Student321 |3I    |Male   |Malay   |      21|     9|      15|\n|Student305 |3I    |Female |Malay   |      24|    22|      16|\n|Student289 |3H    |Male   |Chinese |      26|    16|      16|\n|Student227 |3F    |Male   |Chinese |      27|    77|      31|\n|Student318 |3I    |Male   |Malay   |      27|    11|      25|\n|Student306 |3I    |Female |Malay   |      31|    16|      16|\n\n\n:::\n:::\n\n\n\n# What is ggplot2?\n\nApplied to visualizations, **grammar of graphics** is a grammar used to describe and create a wide range of statistical graphics. This layered approach is implemented in **ggplot2**, an R package for creating data-driven graphics. It has become the go-to tool for making plots flexibly in R.\n\n![](images/clipboard-950964217.png){fig-align=\"center\" width=\"472\"}\n\n-   **Data**: The dataset being plotted.\n\n-   **Aesthetics** take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\n\n-   **Geometrics**: The visual elements used for our data, such as point, bar or line.\n\n-   **Facets** split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\n\n-   **Statistics**, statiscal transformations that summarise data (e.g.Â mean, confidence intervals).\n\n-   **Coordinate systems** define the plane on which data are mapped on the graphic.\n\n-   **Themes** modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background.\n\n# **Essential Grammatical Elements in ggplot2**\n\nLet's examine the first three essential layers for making a plot - Data, Aesthetics and Geometries.\n\n## **Data**\n\nFirst, let's call the ggplot() function using the below code.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data)\n```\n:::\n\n\n\n## Aesthetic mappings\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS))\n```\n\n::: {.cell-output-display}\n![](HandsOnEx01_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n## Geom\n\nGeometric objects are the actual marks we put on a plot. A plot must have at least one geom and there is no upper limit. You can add a geom to a plot using the **+** operator.\n\nExamples include:\n\n-   ***geom_point()*** for drawing individual points (e.g., a scatter plot)\n\n-   ***geom_line()*** for drawing lines (e.g., for a line charts)\n\n-   ***geom_bar()*** for drawing bars (e.g., for bar charts)\n\n-   ***geom_jitter()*** to add a small amount of random variation to the location of each point\n\n-   ***geom_map()*** for drawing polygons in the shape of a map!\n\n# Plotting a Bar Chart\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(x = RACE)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](HandsOnEx01_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n# Plotting a Dot Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(x = RACE,\n           y = SCIENCE)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](HandsOnEx01_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n# Plotting a Histogram\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= ENGLISH)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"#630e27\") \n```\n\n::: {.cell-output-display}\n![](HandsOnEx01_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n# Plotting a Jitter Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= GENDER, \n           y= SCIENCE)) +\n  geom_jitter(width = 0.5, height = 0.5,\n              bins=20, \n              aes(colour = \"#630e27\"))\n```\n\n::: {.cell-output-display}\n![](HandsOnEx01_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n# Plotting a Scatter Plot Smoothing\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x=MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)\n```\n\n::: {.cell-output-display}\n![](HandsOnEx01_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n# Plotting a Box Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](HandsOnEx01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n# **Combining *geom* objects**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(y=MATHS,\n           x=GENDER)) +\n  geom_boxplot() +\n  geom_point(position=\"jitter\",\n             size=0.5)\n```\n\n::: {.cell-output-display}\n![](HandsOnEx01_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "HandsOnEx01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}