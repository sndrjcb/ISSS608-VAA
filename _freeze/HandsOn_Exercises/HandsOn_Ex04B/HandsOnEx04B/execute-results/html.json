{
  "hash": "19306afc55e334fa81f1e1044090f6bd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands On Exercise 4B\"\nsubtitle: \"Visual Statistical Analysis\"\nformat: html\ndate: 05/09/2025\ndate-format: long\ndate-modified: last-modified\neditor: visual\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# 10.1 Learning Outcome\n\nIn this hands-on exercise, you will gain hands-on experience on using:\n\n-   ggstatsplot package to create visual graphics with rich statistical information,\n\n-   performance package to visualise model diagnostics, and\n\n-   parameters package to visualise model parameters\n\n# 10.2 Visual Statistical Analysis with ggstatsplot\n\n[**ggstatsplot**](https://indrajeetpatil.github.io/ggstatsplot/index.html) is an extension of [**ggplot2**](https://ggplot2.tidyverse.org/) package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n\n# 10.3 Getting Started\n\n## 10.3.1 Installing and launching R packages\n\nIn this exercise, **ggstatsplot** and **tidyverse** will be used.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggstatsplot, tidyverse)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npackage 'rbibutils' successfully unpacked and MD5 sums checked\npackage 'Rdpack' successfully unpacked and MD5 sums checked\npackage 'cowplot' successfully unpacked and MD5 sums checked\npackage 'Deriv' successfully unpacked and MD5 sums checked\npackage 'microbenchmark' successfully unpacked and MD5 sums checked\npackage 'minqa' successfully unpacked and MD5 sums checked\npackage 'nloptr' successfully unpacked and MD5 sums checked\npackage 'reformulas' successfully unpacked and MD5 sums checked\npackage 'doBy' successfully unpacked and MD5 sums checked\npackage 'carData' successfully unpacked and MD5 sums checked\npackage 'abind' successfully unpacked and MD5 sums checked\npackage 'Formula' successfully unpacked and MD5 sums checked\npackage 'elliptic' successfully unpacked and MD5 sums checked\npackage 'contfrac' successfully unpacked and MD5 sums checked\npackage 'deSolve' successfully unpacked and MD5 sums checked\npackage 'plyr' successfully unpacked and MD5 sums checked\npackage 'lme4' successfully unpacked and MD5 sums checked\npackage 'pbkrtest' successfully unpacked and MD5 sums checked\npackage 'lmerTest' successfully unpacked and MD5 sums checked\npackage 'car' successfully unpacked and MD5 sums checked\npackage 'coda' successfully unpacked and MD5 sums checked\npackage 'pbapply' successfully unpacked and MD5 sums checked\npackage 'hypergeo' successfully unpacked and MD5 sums checked\npackage 'RcppEigen' successfully unpacked and MD5 sums checked\npackage 'multcompView' successfully unpacked and MD5 sums checked\npackage 'gmp' successfully unpacked and MD5 sums checked\npackage 'Rmpfr' successfully unpacked and MD5 sums checked\npackage 'SuppDists' successfully unpacked and MD5 sums checked\npackage 'kSamples' successfully unpacked and MD5 sums checked\npackage 'BWStest' successfully unpacked and MD5 sums checked\npackage 'RcppParallel' successfully unpacked and MD5 sums checked\npackage 'reshape' successfully unpacked and MD5 sums checked\npackage 'bayestestR' successfully unpacked and MD5 sums checked\npackage 'reshape2' successfully unpacked and MD5 sums checked\npackage 'prismatic' successfully unpacked and MD5 sums checked\npackage 'afex' successfully unpacked and MD5 sums checked\npackage 'BayesFactor' successfully unpacked and MD5 sums checked\npackage 'effectsize' successfully unpacked and MD5 sums checked\npackage 'PMCMRplus' successfully unpacked and MD5 sums checked\npackage 'rstantools' successfully unpacked and MD5 sums checked\npackage 'WRS2' successfully unpacked and MD5 sums checked\npackage 'zeallot' successfully unpacked and MD5 sums checked\npackage 'correlation' successfully unpacked and MD5 sums checked\npackage 'datawizard' successfully unpacked and MD5 sums checked\npackage 'ggcorrplot' successfully unpacked and MD5 sums checked\npackage 'ggside' successfully unpacked and MD5 sums checked\npackage 'ggsignif' successfully unpacked and MD5 sums checked\npackage 'insight' successfully unpacked and MD5 sums checked\npackage 'paletteer' successfully unpacked and MD5 sums checked\npackage 'parameters' successfully unpacked and MD5 sums checked\npackage 'performance' successfully unpacked and MD5 sums checked\npackage 'statsExpressions' successfully unpacked and MD5 sums checked\npackage 'ggstatsplot' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\sandr\\AppData\\Local\\Temp\\Rtmp6VoHQe\\downloaded_packages\n```\n\n\n:::\n:::\n\n\n\n## 10.3.2 Importing data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam <- read_csv(\"Exam_data.csv\")\n```\n:::\n\n\n\n# 10.3.3 One-sample test: *gghistostats()* method\n\nIn the code chunk below, [*gghistostats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/gghistostats.html) is used to to build an visual of one-sample test on English scores.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](HandsOnEx04B_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n# 10.3.4 Unpacking the Bayes Factor\n\n-   A Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\n\n-   That’s because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.\n\n-   When we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10.\n\n-   The [**Schwarz criterion**](https://www.statisticshowto.com/bayesian-information-criterion/) is one of the easiest ways to calculate rough approximation of the Bayes Factor.\n\n# 10.3.6 Two-sample mean test: *ggbetweenstats()*\n\nIn the code chunk below, [*ggbetweenstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) is used to build a visual for two-sample mean test of Maths scores by gender.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](HandsOnEx04B_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n# 10.3.7 Oneway ANOVA Test: *ggbetweenstats()* method\n\nIn the code chunk below, [*ggbetweenstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) is used to build a visual for One-way ANOVA test on English score by race.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](HandsOnEx04B_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n# 10.3.8 Significant Test of Correlation: *ggscatterstats()*\n\nIn the code chunk below, [*ggscatterstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggscatterstats.html) is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n```\n\n::: {.cell-output-display}\n![](HandsOnEx04B_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n# 10.3.9 Significant Test of Association (Depedence) : *ggbarstats()* methods\n\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using [*cut()*](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/cut).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n```\n:::\n\n\n\nIn this code chunk below [*ggbarstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbarstats.html) is used to build a visual for Significant Test of Association.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)\n```\n\n::: {.cell-output-display}\n![](HandsOnEx04B_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "HandsOnEx04B_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}